面试：自定义排序方法，实现对列表的升序排列．
# 在ListHelper中，定义万能(任意条件／升序／降序)排序方法．
# def sort01(target):
#     for r in range(len(target) - 1):
#         for c in range(r + 1, len(target)):
#             if target[r] > target[c]:
#                 target[r], target[c] = target[c], target[r]

# list01 = [2,6,4,4,5,7]
# sort01(list01)
# for item in list01:
#     print(item)

# def sort02(target):
#     for r in range(len(target) - 1):
#         for c in range(r + 1, len(target)):
#             if target[r] < target[c]:
#                 target[r], target[c] = target[c], target[r]
#
# def sort03(target):
#     for r in range(len(target) - 1):
#         for c in range(r + 1, len(target)):
#             # if target[r].atk < target[c].atk:
#             if xxx(target[r],target[c])
#                 target[r], target[c] = target[c], target[r]

# def xxx(item01,item02):
#     return item01.atk < item02.atk

def sort(target,func_condition):
    """
        万能排序  
    :param target: 需要排序的数据
    :param func_condition: 排序的逻辑
          func_condition 类型是函数
                         参数是列表中两个元素
                         返回值是比较的结果
                         方法体是比较的条件
    :return:
    """
    for r in range(len(target) - 1):
        for c in range(r + 1, len(target)):
            if func_condition(target[r],target[c]):
                target[r], target[c] = target[c], target[r]


list01 = [3,34,5,6,8]
sort(list01,lambda e1,e2:e1 < e2)
print(list01)



